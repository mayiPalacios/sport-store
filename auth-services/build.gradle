plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    jcenter()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0'

    // Dependencia para Hibernate Validator
    implementation 'org.hibernate.validator:hibernate-validator:7.0.1.Final'

    implementation 'org.hibernate.orm:hibernate-core:6.1.6.Final'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Dependencia para Jakarta Persistence
    implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0'

    // Dependencia para Hibernate Validator
    implementation 'org.hibernate.validator:hibernate-validator:7.0.1.Final'

    // Implementación de Hibernate Core
    implementation 'org.hibernate.orm:hibernate-core:6.1.6.Final'

    // Dependencia para la integración con Spring Boot (si usas Spring Boot)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Dependencia para JWT
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // Dependencia para Jakarta Persistence
    implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0'

    // Dependencia para Hibernate Validator
    implementation 'org.hibernate.validator:hibernate-validator:7.0.1.Final'

    // Implementación de Hibernate Core
    implementation 'org.hibernate.orm:hibernate-core:6.1.6.Final'

    // Dependencia para la integración con Spring Boot (si usas Spring Boot)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Dependencia para JWT
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // Dependencia para Jakarta Persistence
    implementation 'jakarta.persistence:jakarta.persistence-api:3.0.0'

    // Dependencia para Hibernate Validator
    implementation 'org.hibernate.validator:hibernate-validator:7.0.1.Final'

    // Implementación de Hibernate Core
    implementation 'org.hibernate.orm:hibernate-core:6.1.6.Final'

    // Dependencia para la integración con Spring Boot (si usas Spring Boot)
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Dependencia para JAXB (para resolver el problema de javax.xml.bind)
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'

    // Dependencias de MapStruct
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
    testLogging.showStandardStreams = false
}

test.finalizedBy jacocoTestReport

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.required = true
    }
}